{"version":3,"sources":["logo.svg","login/login_component.js","serviceWorker.js","services/auth-header.js","login/reducer.js","util/API_URI.js","login/sagas.js","components/Navbar/navbar.js","components/dashboard/Dashboard.js","services/ProtectedRoute.js","components/HR/menu.js","components/HR/leftmenu.js","components/HR/basic_details.js","components/HR/education_details.js","components/HR/add employee.js","components/HR/view employee.js","components/HR/hr.js","index.js"],"names":["module","exports","Login","props","user","handleChange","event","target","name","value","loginSubmitHandler","onLogin","className","class","type","placeholder","onChange","e","onClick","React","Component","connect","state","isLoggedIn","dispatch","Boolean","window","location","hostname","match","getAuthHeaders","jwtToken","localStorage","getItem","console","log","initialState","LoginReducer","action","newState","href","CONTEXTPATH","API","AUTHENTICATE_URL","ADD_EMPLOYEE","authenticate","LoginSaga","call","fetch","method","headers","body","JSON","stringify","json","then","jwt","setItem","token","put","take","NavBar","to","Dashboard","ProtectedRoute","isAuthenticated","this","component","Fragment","pathname","HrMenu","menuHandler","LeftMenu","compName","listener","BasicDetails","validation","isPassed","getMethodAndHeader","myauthorization","messageBox","highlightErrors","violations","map","handleSubmit","requestOptions","response","status","catch","error","handleOnChange","saveHandler","htmlFor","firstname","middlename","lastname","emcontactname","emcontactnum","EducationDetails","persist","data","hQualification","hQualificationMarks","hQualificationStDate","hQualificationEndDate","AddEmployee","isFormValid","preventDefault","testOnClick","formSectionLoader","formSectionLoaderHandler","setState","id","ViewEmployee","HR","compLoaderHandler","compLoader","sagaMiddleWare","createSagaMiddleware","store","createStore","applyMiddleware","run","history","createBrowserHistory","root","document","getElementById","Location","path","exec","hash","replace","ReactDOM","render","exact","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5a00cb91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport \"./login.css\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  user = {};\n  handleChange = (event) => {\n    this.user[event.target.name] = event.target.value;\n  };\n\n  loginSubmitHandler = (event) => {\n    this.props.onLogin(this.user);\n  };\n\n  render() {\n    return (\n      <section className=\"full-wh container\">\n        <div className=\"login-container\">\n          <div className=\"tool-info\">\n            {/* <span>Tedroox</span>\n            <span>TedCafe</span> */}\n          </div>\n          <div className=\"login-form-container\">\n            <div class=\"login-wrapper wd40\">\n              <p className=\"enter_cred\">Enter your login credentials:</p>\n              <input\n                type=\"text\"\n                className=\"input-control wd100\"\n                placeholder=\"enter username\"\n                name=\"username\"\n                onChange={(e) => this.handleChange(e)}\n              />\n              <br></br>\n\n              <input\n                type=\"password\"\n                className=\"input-control wd100\"\n                placeholder=\"enter password\"\n                name=\"password\"\n                onChange={(e) => this.handleChange(e)}\n              />\n              <br></br>\n              <input\n                type=\"button\"\n                //onClick={() => this.props.onLogin(this.user)}\n                onClick={(e) => this.loginSubmitHandler(e)}\n                className=\"btn-action\"\n                value=\"submit\"\n              />\n            </div>\n            <span class=\"info\">\n              Please contact helpdesk@tedroox.com, for any issues\n            </span>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.isLoggedIn,\n  };\n};\n\nconst mapDispatchToActions = (dispatch) => {\n  return {\n    onLogin: (user) => {\n      dispatch({\n        type: \"LOGIN\",\n        value: user,\n      });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToActions)(Login);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default function getAuthHeaders() {\n  const jwtToken = localStorage.getItem(\"token\");\n\n  if (jwtToken) {\n    console.log(\"auth: \" + jwtToken);\n    return \"bearer \" + jwtToken;\n  } else {\n    return false;\n  }\n}\n","import React from \"react\";\n\nimport getAuthHeaders from \"../services/auth-header\";\n\nconst initialState = {\n  isLoggedIn: false,\n};\n\nconst LoginReducer = (state = initialState, action) => {\n  const newState = { ...state };\n  switch (action.type) {\n    case \"LOGGED_IN_ASYNC\":\n      if (getAuthHeaders()) {\n        newState.isLoggedIn = true;\n        window.location.href = \"/dashboard\";\n      }\n  }\n  return newState;\n};\n\nexport default LoginReducer;\n","const CONTEXTPATH =\n  \"http://hrms-env.eba-emxphhfy.us-east-1.elasticbeanstalk.com/springjwt\";\n\nconst API = {\n  CONTEXTPATH: CONTEXTPATH,\n  AUTHENTICATE_URL: CONTEXTPATH + \"/authenticate\",\n  ADD_EMPLOYEE: CONTEXTPATH + \"/employee/add\",\n};\nexport default API;\n","import { take, takeLatest, takeEvery, call, put } from \"redux-saga/effects\";\nimport API from \"../util/API_URI.js\";\n\nfunction* authenticate(user) {\n  try {\n    const response = yield call(fetch, API.AUTHENTICATE_URL, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(user.value),\n    });\n\n    response.json().then((jwt) => {\n      localStorage.setItem(\"token\", jwt.token);\n    });\n    yield put({ type: \"LOGGED_IN_ASYNC\", value: true });\n  } finally {\n  }\n}\n\nexport default function* LoginSaga() {\n  const user = yield take(\"LOGIN\");\n  yield call(authenticate, user);\n}\n","import React from \"react\";\nimport \"../../resources/global.css\";\nimport \"../Navbar/navbar.css\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = (props) => {\n  return (\n    <nav>\n      <div className=\"logo\">Tedroox</div>\n      <div className=\"menu\">\n        <ul>\n          <li>Profile</li>\n          <li>\n            <Link className=\"link\" to=\"/hr\">\n              HR\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport NavBar from \"../Navbar/navbar\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return <NavBar />;\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport getAuthHeaders from \"./auth-header\";\nimport { Redirect } from \"react-router-dom\";\nimport NavBar from \"../components/Navbar/navbar\";\n\nclass ProtectedRoute extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  isAuthenticated = () => {\n    if (getAuthHeaders()) return true;\n  };\n\n  render() {\n    const Component = this.props.component;\n\n    return this.isAuthenticated() ? (\n      <React.Fragment>\n        <NavBar />\n        <Component />\n      </React.Fragment>\n    ) : (\n      <Redirect to={{ pathname: \"/login\" }} />\n    );\n  }\n}\n\nexport default ProtectedRoute;\n","import React from \"react\";\n\nconst HrMenu = (props) => {\n  return (\n    <div className=\"hr-menu\">\n      <ul>\n        <li onClick={(e) => props.menuHandler(\"addEmployee\")}>Add Employee</li>\n        <li onClick={(e) => props.menuHandler(\"viewEmployee\")}>\n          View Employee\n        </li>\n        <li onClick={(e) => props.menuHandler(\"viewEmployee\")}>Compliances</li>\n        <li onClick={(e) => props.menuHandler(\"viewEmployee\")}>Exit process</li>\n        <li onClick={(e) => props.menuHandler(\"viewEmployee\")}>Dashboard</li>\n        <li onClick={(e) => props.menuHandler(\"viewEmployee\")}>Calendar</li>\n        <li onClick={(e) => props.menuHandler(\"viewEmployee\")}>Attendance</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default HrMenu;\n","import React from \"react\";\nimport \"../HR/hr.css\";\n\nconst LeftMenu = (props) => {\n  return (\n    <div className=\"left-menu-container\">\n      <ul class=\"menu-items\">\n        <li\n          className={props.compName === \"basicDetails\" ? \"active\" : null}\n          onClick={(e) => props.listener(\"basicDetails\")}\n        >\n          Basic Details\n        </li>\n        <li\n          className={props.compName === \"educationDetails\" ? \"active\" : null}\n          onClick={(e) => props.listener(\"educationDetails\")}\n        >\n          Education Details\n        </li>\n        <li>Basic Details</li>\n        <li>Identification Details</li>\n        <li>Basic Details</li>\n        <li>Identification Details</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default LeftMenu;\n","import React from \"react\";\nimport \"../../resources/global.css\";\nimport \"../HR/hr.css\";\nimport getAuthHeaders from \"../../services/auth-header\";\nimport API from \"../../util/API_URI\";\n\nclass BasicDetails extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  validation = function () {\n    return {\n      isPassed: true,\n    };\n  };\n\n  getMethodAndHeader = () => {\n    let requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        myauthorization: getAuthHeaders(),\n        \"Access-Control-Request-Method\": \"POST\",\n      },\n    };\n    return requestOptions;\n  };\n  messageBox = () => {\n    console.log(\"in message box\");\n  };\n\n  highlightErrors = (violations) => {\n    violations.map((e) => console.log(e));\n  };\n\n  handleSubmit = (event) => {\n    console.log(this.props.user);\n    let requestOptions = this.getMethodAndHeader();\n    requestOptions.body = JSON.stringify(this.props.user);\n    fetch(API.ADD_EMPLOYEE + \"/basic\", requestOptions)\n      .then((response) => {\n        console.log(response.status);\n        if (response.status == 204 || response.status == 201) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then((json) => {\n        // call message box\n        this.messageBox();\n      })\n      .catch((error) => {\n        error.json().then((error) => this.highlightErrors(error.violations));\n      });\n  };\n\n  handleOnChange = (event) => {\n    this.props.user[event.target.name] = event.target.value;\n  };\n\n  saveHandler = (event) => {\n    console.log(\"save handler\");\n    console.log(this.props);\n    if (this.validation().isPassed) {\n      this.handleSubmit(event);\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"flex-center-col wd100  rel\">\n        <div className=\"flex-col form-section\">\n          <p className=\"text-center sub-heading\">Basic Details</p>\n          <label htmlFor=\"firstname\" className=\"form-label\">\n            First name:\n          </label>\n          <input\n            type=\"text\"\n            name=\"firstname\"\n            value={this.props.user.firstname}\n            onChange={(e) => this.handleOnChange(e)}\n          />\n\n          <label htmlFor=\"middlename\" className=\"form-label\">\n            Middle name:\n          </label>\n          <input\n            type=\"text\"\n            name=\"middlename\"\n            value={this.props.user.middlename}\n            onChange={(e) => this.handleOnChange(e)}\n          />\n\n          <label htmlFor=\"lastname\" className=\"form-label\">\n            Last name:\n          </label>\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            value={this.props.user.lastname}\n            onChange={(e) => this.handleOnChange(e)}\n          />\n          <label htmlFor=\"emcontactname\" className=\"form-label\">\n            Emergency contact name:\n          </label>\n          <input\n            type=\"text\"\n            name=\"emcontactname\"\n            value={this.props.user.emcontactname}\n            onChange={(e) => this.handleOnChange(e)}\n          />\n          <label htmlFor=\"emcontactnum\" className=\"form-label\">\n            Emergency contact number:\n          </label>\n          <input\n            type=\"text\"\n            name=\"emcontactnum\"\n            value={this.props.user.emcontactnum}\n            onChange={(e) => this.handleOnChange(e)}\n          />\n        </div>\n        <div className=\"wd40\">\n          <input\n            onClick={(e) => this.saveHandler(e)}\n            type=\"button\"\n            className=\"btn-action\"\n            value=\"Save and Proceed\"\n          />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default BasicDetails;\n","import React from \"react\";\nimport \"../../resources/global.css\";\nimport \"../HR/hr.css\";\nimport getAuthHeaders from \"../../services/auth-header\";\nimport API from \"../../util/API_URI\";\n\nclass EducationDetails extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleOnChange = (event) => {\n    event.persist();\n    console.log(event.target.value);\n    this.props.user[event.target.name] = event.target.value;\n    console.log(this.props.user);\n  };\n\n  validation = function () {\n    return {\n      isPassed: true,\n    };\n  };\n\n  getMethodAndHeader = () => {\n    let requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        myauthorization: getAuthHeaders(),\n        \"Access-Control-Request-Method\": \"POST\",\n      },\n    };\n    return requestOptions;\n  };\n\n  handleSubmit = (event) => {\n    console.log(this.props.user);\n    let requestOptions = this.getMethodAndHeader();\n    requestOptions.body = JSON.stringify(this.props.user);\n    fetch(API.ADD_EMPLOYEE + \"/education\", requestOptions)\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n  };\n\n  saveHandler = (event) => {\n    console.log(\"education details save handler\");\n    console.log(this.props);\n    if (this.validation().isPassed) {\n      this.handleSubmit(event);\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"flex-center-col wd100  rel\">\n        <div className=\"flex-col form-section\">\n          <p className=\"text-center sub-heading\">Education Details</p>\n          <label className=\"form-label\">Highest qualification:</label>\n          <select\n            value={this.props.user.hQualification}\n            name=\"hQualification\"\n            onChange={(e) => this.handleOnChange(e)}\n          >\n            <option value=\"PHD\">PHD</option>\n            <option value=\"Masters\">Masters</option>\n            <option value=\"Bachelors\">Bachelors</option>\n            <option value=\"Intermediate\">Intermediate</option>\n            <option value=\"Matriculation\">Matriculation</option>\n          </select>\n\n          <label htmlFor=\"hQualificationMarks\" className=\"form-label\">\n            Highest qualification percentage:\n          </label>\n          <input\n            type=\"number\"\n            name=\"hQualificationMarks\"\n            value={this.props.user.hQualificationMarks}\n            onChange={(e) => this.handleOnChange(e)}\n          />\n\n          <label htmlFor=\"hQualificationStDate\" className=\"form-label\">\n            Start date:\n          </label>\n          <input\n            type=\"date\"\n            name=\"hQualificationStDate\"\n            value={this.props.user.hQualificationStDate}\n            onChange={(e) => this.handleOnChange(e)}\n          />\n\n          <label htmlFor=\"hQualificationEndDate\" className=\"form-label\">\n            End date:\n          </label>\n          <input\n            type=\"date\"\n            name=\"hQualificationEndDate\"\n            value={this.props.user.hQualificationEndDate}\n            onChange={(e) => this.handleOnChange(e)}\n          />\n        </div>\n        <div className=\"wd40\">\n          <input\n            type=\"button\"\n            onClick={(e) => this.saveHandler(e)}\n            className=\"btn-action\"\n            value=\"Save and Proceed\"\n          />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default EducationDetails;\n","import React from \"react\";\nimport \"../../resources/global.css\";\nimport \"../HR/hr.css\";\nimport getAuthHeaders from \"../../services/auth-header\";\nimport API from \"../../util/API_URI\";\nimport LeftMenu from \"./leftmenu\";\nimport BasicDetails from \"./basic_details\";\nimport EducationDetails from \"./education_details\";\n\nclass AddEmployee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      compName: \"\",\n      user: {},\n    };\n  }\n\n  isFormValid = () => {\n    return true;\n  };\n\n  getMethodAndHeader = () => {\n    let requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        myauthorization: getAuthHeaders(),\n        \"Access-Control-Request-Method\": \"POST\",\n      },\n    };\n    return requestOptions;\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.props.user);\n    let requestOptions = this.getMethodAndHeader();\n    requestOptions.body = JSON.stringify(this.props.user);\n    fetch(API.ADD_EMPLOYEE, requestOptions)\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n  };\n  handleOnChange = (event) => {\n    this.props.user[event.target.name] = event.target.value;\n  };\n\n  testOnClick = (event) => {\n    console.log(\"populating\");\n    console.log(this.state.user);\n  };\n\n  formSectionLoader = () => {\n    if (this.state.compName === \"basicDetails\") {\n      console.log(\"basic detals called\");\n      return <BasicDetails user={this.state.user}></BasicDetails>;\n    } else if (this.state.compName === \"educationDetails\") {\n      return <EducationDetails user={this.state.user}></EducationDetails>;\n    }\n  };\n\n  formSectionLoaderHandler = (compName) => {\n    console.log(\"loader handler called:qweqeq \" + compName);\n    this.setState({ compName: compName });\n  };\n\n  render() {\n    return (\n      <section className=\"flex-row flex-grow-1\" id=\"addEmpFormSec\">\n        <LeftMenu\n          listener={this.formSectionLoaderHandler}\n          compName={this.state.compName}\n        />\n        <div class=\"right-container flex-grow-1\">\n          <div class=\"flex-justify-center-col\">\n            <p className=\"sec-heading text-center\">Add employee form</p>\n            <div className=\"progress-bar\">\n              <div class=\"show-progress\">25% completed</div>\n            </div>\n          </div>\n          <button onClick={(e) => this.testOnClick(e)}>Test me</button>\n          {this.formSectionLoader()}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default AddEmployee;\n","import React from \"react\";\n\nclass ViewEmployee extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {};\n\n  render() {\n    return (\n      <section>\n        <h1>View employee</h1>\n        <p>Employee list</p>\n      </section>\n    );\n  }\n}\n\nexport default ViewEmployee;\n","import React from \"react\";\nimport HrMenu from \"./menu\";\nimport \"../../resources/global.css\";\nimport \"../HR/hr.css\";\nimport AddEmployee from \"./add employee\";\nimport ViewEmployee from \"./view employee\";\n\nclass HR extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      compName: \"\",\n      user: {},\n    };\n  }\n\n  compLoaderHandler = (compName) => {\n    console.log(\"loader handler called: \" + compName);\n    this.setState({ compName: compName });\n  };\n\n  compLoader = () => {\n    if (this.state.compName === \"dashboard\") {\n      return <div>dashboard</div>;\n    } else if (this.state.compName === \"addEmployee\") {\n      return <AddEmployee user={this.state.user} />;\n    } else if (this.state.compName === \"viewEmployee\") {\n      return <ViewEmployee />;\n    } else {\n      return <div>dashboard</div>;\n    }\n  };\n\n  render() {\n    return (\n      <section className=\"hr-section\">\n        <HrMenu menuHandler={this.compLoaderHandler} />\n        {this.compLoader()}\n      </section>\n    );\n  }\n}\n\nexport default HR;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport LoginReducer from \"./login/reducer\";\nimport LoginSaga from \"./login/sagas\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Login from \"./login/login_component\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProtectedRoute from \"./services/ProtectedRoute\";\nimport HR from \"./components/HR/hr\";\nimport { createBrowserHistory } from \"history\";\n\nconst sagaMiddleWare = createSagaMiddleware();\nconst store = createStore(LoginReducer, applyMiddleware(sagaMiddleWare));\nsagaMiddleWare.run(LoginSaga);\n\nconst history = createBrowserHistory();\n\nlet root = document.getElementById(\"root\");\nif (root) {\n  var location = Location;\n  // 1. Set up the browser history with the updated location\n  // (minus the # sign)\n  const path = (/#!(\\/.*)$/.exec(location.hash) || [])[1];\n  if (path) {\n    history.replace(path);\n  }\n}\n\n// 2. Render our app\n//render(<App />, app);\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <ProtectedRoute exact={true} path=\"/dashboard\" component={Dashboard} />\n        <ProtectedRoute exact={true} path=\"/hr\" component={HR} />\n        <Route exact path=\"/\" component={Login} />\n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n  root\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}